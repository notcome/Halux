%%% definition
([*x*]) = H.span ! A.class_ "note"
([#x#]) = H.span ! A.lang "en"
([@x@]) = H.code
%%%%%%%%%%%%%%

{h1|[[#HTML & CSS#]快速介绍]}

五彩斑斓的网页由两个部分组成。其一标记文档内容，使用一种叫做超文本标记语言[*Hyper Text Markup Language，[link|[HTML][http://www.w3.org/TR/2014/PR-html5-20140916/Overview.html#contents]]*]的技术来书写；其二标记外观[*亦称「样式*]，使用一种叫做层叠样式表[*Cascading Style Sheet，[link|[CSS][http://www.w3.org/Style/CSS/]]*]的技术来描述。

这篇文章面向外行，尽可能使用朴素的术语。但如果有什么根本错误，请指出。同时，有什么没有背景知识的普通人难以理解的表述，也请指出来，谢谢。

虽然[#HTML#]内可以定义文档的外观，但这是不被推荐的，在介绍[#CSS#]之前，我不会提及如何修饰网页，请保持耐心。

%%% section
{h2|[网页文档与[#HTML#]]}

[#HTML#]用于书写网页文档的内容。一个网页由两部分组成。一是描述该网页自身的信息，亦称元数据[*metadata*]，就好似书中的出版信息，包括了网页的标题、作者、描述等信息；二是网页的正文，就好似书的正文一般。其基本框架如下：

{gist|[https://gist.github.com/notcome/70aaa34a8be679d277d8]}

[@<html>@]包含了整个网页内容。[@<head>@]内描述的为元数据，而[@<body>@]内描述的为正文内容。

诸如[@<html>@]、[@<head>@]与[@<body>@]这样的标记被称为元素。一个元素包含多个子元素，每个子元素还可以包含更多孙子元素，可以无限循环下去。这种结构模型在计算机科学和数学里被称为「树」。树结构在自然生活中无处不在：如其名字所暗示的一样，一棵树的主干、分叉与叶子就构成了一棵树；一本学术著作有几个章节，每个章节下面有几个小节，小节下面还有更小的单位，这也是一棵树。几乎所有人类的文学作品都可以被看成树，因此[#HTML#]使用树结构也就不难理解了。

下面来介绍一下[@<body>@]内的两类元素。其中一种表示文档结构关系，在此称为「结构元素」；另外一种为一维的文本提供额外的信息，在此称为「文本元素」。这都不是标准名称。
%%%%%%%%%%%
